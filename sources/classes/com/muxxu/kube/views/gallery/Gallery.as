package com.muxxu.kube.views.gallery {	import gs.TweenLite;	import com.muxxu.kube.data.GalleryData;	import com.muxxu.kube.events.GalleryDataEvent;	import com.muxxu.kube.events.GalleryEnlargeEvent;	import com.muxxu.kube.events.KTModelEvent;	import com.muxxu.kube.views.AbstractKTView;	import com.muxxu.kube.views.gallery.components.GalleryPrevNextButton;	import com.muxxu.kube.views.gallery.form.AddImageForm;	import com.muxxu.kube.views.gallery.form.SearchImageForm;	import com.muxxu.kube.views.gallery.results.GalleryEnlarge;	import com.muxxu.kube.views.gallery.results.GalleryResults;	import com.muxxu.kube.vo.Message;	import com.muxxu.kube.vo.MessageIds;	import com.muxxu.kube.vo.Templates;	import com.nurun.components.button.GraphicButton;	import com.nurun.structure.mvc.model.events.IModelEvent;	import flash.events.Event;	import flash.events.MouseEvent;	/**	 * Displays the image's gallery.	 * 	 * @author  Francois	 */	public class Gallery extends AbstractKTView {		private var _addForm:AddImageForm;		private var _results:GalleryResults;		private var _searchForm:SearchImageForm;		private var _enlarge:GalleryEnlarge;		private var _prevPageBt:GraphicButton;
		private var _nextPageBt:GraphicButton;
								/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>Gallery</code>.		 */		public function Gallery() {			super();		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */				override public function set height(value:Number):void {			_height = value;			if(visible){				_invalidator.invalidate();			}		}				/* ****** *		 * PUBLIC *		 * ****** */		override public function update(e:IModelEvent):void {			var message:Message = KTModelEvent(e).message;						if(message.id == MessageIds.CHANGE_VIEW){				if(message.data == Templates.GALLERY){					show();					addChildOutsidePane(_addForm);					addChildOutsidePane(_prevPageBt);					addChildOutsidePane(_nextPageBt);					addChildOutsidePane(_enlarge);					addChildOutsidePane(_searchForm);					GalleryData.getInstance().getResults();									}else if(containsOutsidePane(_addForm)) {					hide();					removeChildOutsidePane(_addForm);					removeChildOutsidePane(_prevPageBt);					removeChildOutsidePane(_nextPageBt);					removeChildOutsidePane(_enlarge);					removeChildOutsidePane(_searchForm);					_results.clear();					_enlarge.close();				}			}		}						/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Initialize the class.		 */		override protected function initialize():void {			super.initialize();						_results	= addChild(new GalleryResults()) as GalleryResults;			_addForm	= addChildOutsidePane(new AddImageForm()) as AddImageForm;			_prevPageBt	= addChildOutsidePane(new GalleryPrevNextButton(false)) as GraphicButton;			_nextPageBt	= addChildOutsidePane(new GalleryPrevNextButton(true)) as GraphicButton;			_enlarge	= addChildOutsidePane(new GalleryEnlarge()) as GalleryEnlarge;			_searchForm	= addChildOutsidePane(new SearchImageForm()) as SearchImageForm;						_prevPageBt.visible = false;			_nextPageBt.visible = false;						_addForm.addEventListener(Event.RESIZE,				computePositions);			_prevPageBt.addEventListener(MouseEvent.CLICK,		clickHandler);			_nextPageBt.addEventListener(MouseEvent.CLICK,		clickHandler);			_enlarge.addEventListener(GalleryEnlargeEvent.PREV_IMAGE, prevNextImageHandler);			_enlarge.addEventListener(GalleryEnlargeEvent.NEXT_IMAGE, prevNextImageHandler);			GalleryData.getInstance().addEventListener(GalleryDataEvent.ITEMS_LOADING_SUCCESS,	loadItemsSuccessHandler);		}
		/**		 * Resize and replace the elements.		 */		override protected function computePositions(e:Event = null):void {			super.computePositions();						_searchForm.width= _width;			_addForm.width	= _width;			_addForm.y		= Math.round(_height - _addForm.height);						_pane.y			= Math.round(_searchForm.height) + 1;			_pane.height	= Math.round(_height - _pane.y - _addForm.height);			_pane.update(true);						_results.width	= _pane.visibleWidth;			_results.height	= _pane.visibleHeight;			_results.validate();			//			super.computePositions();						_prevPageBt.width = _nextPageBt.width = 30;			_prevPageBt.height = _nextPageBt.height = _results.height;			_nextPageBt.x = _pane.visibleWidth - 30;			_nextPageBt.y = _prevPageBt.y = _pane.y;			_prevPageBt.validate();			_nextPageBt.validate();						_enlarge.y		= _pane.y;			_enlarge.width	= _pane.visibleWidth;			_enlarge.height	= _pane.visibleHeight;		}				/**		 * Called when prev/next button is clicked.		 */		private function clickHandler(e:MouseEvent):void {			var prev:int = GalleryData.getInstance().prevPage;			var next:int = GalleryData.getInstance().nextPage;			if(e.currentTarget == _prevPageBt && prev > -1) {				GalleryData.getInstance().getResults("", "", "", "", prev);			}else if(next > -1){				GalleryData.getInstance().getResults("", "", "", "", next);			}		}				/**		 * Called when items loading succeed		 */		private function loadItemsSuccessHandler(e:GalleryDataEvent):void {			computePositions();			var prev:int = GalleryData.getInstance().prevPage;			var next:int = GalleryData.getInstance().nextPage;			_prevPageBt.visible = prev > -1;			_nextPageBt.visible = next > -1;			_prevPageBt.alpha = 1;			_nextPageBt.alpha = 1;			TweenLite.to(_prevPageBt, .5, {alpha:.5, delay:1});			TweenLite.to(_nextPageBt, .5, {alpha:.5, delay:1});		}				/**		 * Called when prev/next button of the enlarge component is clicked.		 */		private function prevNextImageHandler(event:GalleryEnlargeEvent):void {//			GalleryData.getInstance().enlargeItem(_data.index);		}			}}
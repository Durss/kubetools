package com.muxxu.kube.views.gallery.form {	import gs.TweenLite;	import com.muxxu.kube.components.button.KubeButton;	import com.muxxu.kube.components.form.KubeComboBox;	import com.muxxu.kube.components.form.KubeInput;	import com.muxxu.kube.data.GalleryData;	import com.nurun.components.form.events.FormComponentEvent;	import com.nurun.components.text.CssTextField;	import com.nurun.structure.environnement.label.Label;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.filters.DropShadowFilter;	import flash.text.TextFieldAutoSize;	/**	 * Displays the search form.	 * 	 * @author  Francois	 */	public class SearchImageForm extends Sprite {		private var _searchName:KubeInput;		private var _searchLabel:CssTextField;		private var _searchType:KubeComboBox;		private var _width:int;		private var _submit:KubeButton;		private var _tooltipText:CssTextField;
								/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>SearchImageForm</code>.		 */		public function SearchImageForm() {			initialize();		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/**		 * Sets the component's width without simply scaling it.		 */		override public function set width(value:Number):void {			_width = value;			computePositions();		}				/**		 * Gets the virtual component's width.		 */		override public function get width():Number { return _width; }				/**		 * Gets the virtual component's height.		 */		override public function get height():Number { return _searchName.height + 2; }						/* ****** *		 * PUBLIC *		 * ****** */						/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Initializes the class.		 */		private function initialize():void {			_searchLabel	= addChild(new CssTextField("galleryFormLabel")) as CssTextField;			_searchName		= addChild(new KubeInput()) as KubeInput;			_searchType		= addChild(new KubeComboBox(Label.getLabel("gallerySearchFormType"), false)) as KubeComboBox;			_submit			= addChild(new KubeButton(Label.getLabel("gallerySearchFormSubmit"))) as KubeButton;			_tooltipText	= addChild(new CssTextField("tooltipContent")) as CssTextField;						_searchLabel.text = Label.getLabel("gallerySearchFormName");			KubeButton(_searchType.button).yLabelOffset = -1;						_searchType.addItemSkined(Label.getLabel("galleryFormEntryTypePixelArt"), 0);			_searchType.addItemSkined(Label.getLabel("galleryFormEntryTypeMonument"), 1);			_searchType.addItemSkined(Label.getLabel("galleryFormEntryTypeLandscape"), 2);			_searchType.addItemSkined(Label.getLabel("galleryFormEntryTypeOther"), 3);			_searchType.list.scrollableList.allowMultipleSelection = true;			_searchType.listHeight = _searchType.list.scrollableList.heightMax + 2;						_tooltipText.wordWrap = true;			_tooltipText.autoSize = TextFieldAutoSize.NONE;			_tooltipText.text = Label.getLabel("gallerySearchFormHelp");			_tooltipText.background = true;			_tooltipText.backgroundColor = 0x4CA5CD;			_tooltipText.height = 0;			_tooltipText.filters = [new DropShadowFilter(4,90,0,.5,4,4,.5,3)];						var i:int, len:int, indexes:Array;			len = _searchType.list.scrollableList.length;			indexes = [];			for(i = 0; i < len; ++i) { indexes[i] = i; }			_searchType.list.scrollableList.selectedIndexes = indexes;						_submit.addEventListener(MouseEvent.CLICK,				submitHandler);			_searchName.addEventListener(FormComponentEvent.SUBMIT,	submitHandler);			_searchName.addEventListener(MouseEvent.ROLL_OVER,		rollOverInputHandler);			_searchName.addEventListener(MouseEvent.ROLL_OUT,		rollOutInputHandler);		}
		/**		 * Resizes and replaces the elements.		 */		private function computePositions():void {			var totW:int	= _width - _searchLabel.width - _submit.width - _searchType.width - 5*3;			_searchName.width = Math.max(80, totW);			_searchName.y	= 1;			_searchName.x	= Math.round(_searchLabel.width) + 5;			_searchLabel.y	= Math.round((_searchName.height - _searchLabel.height) * .5);			_searchType.y	= 1;			_searchType.x	= Math.round(_searchName.x + _searchName.width) + 5;			_submit.y		= 1;			_submit.x		= Math.round(_searchType.x + _searchType.width) + 5;			_searchType.button.height = _submit.height = _searchName.height;			_tooltipText.width = _searchName.width;						var h:int = _searchName.height + 2;			graphics.clear();			graphics.beginFill(0xFFFFFF, .35);			graphics.drawRect(0, 0, _width, h);			graphics.lineStyle(0, 0x384294, 1);			graphics.moveTo(0, h);			graphics.lineTo(_width, h);			_tooltipText.x	= _searchName.x;			_tooltipText.y	= h;		}				/**		 * Called when submit button is clicked.		 */		private function submitHandler(e:Event):void {			var s:String, a:String, z:String, t:String;			a = "";			z = "";			s = _searchName.text;			t = _searchType.list.scrollableList.selectedDatas.join(";");			if(s.search(/^(author|auteur|a):/i) > -1){				a = s.replace(/^(author|auteur|a):/i, "");				s = "";			}else if(s.search(/^(zone|z):(-?[0-9]*)(;|\s|,)(-?[0-9]*)/i) > -1){				z = s.replace(/^(zone|z):(-?[0-9]*)(;|\s|,)(-?[0-9]*)/i, "$2;$4");				s = "";			}			GalleryData.getInstance().getResults(s, a, z, t);		}				/**		 * Called on input's roll over.		 */		private function rollOverInputHandler(e:MouseEvent):void {			_tooltipText.getCharBoundaries(0);			TweenLite.to(_tooltipText, .25, {height:_tooltipText.textHeight + 10});		}				/**		 * Called on input's roll out.		 */		private function rollOutInputHandler(e:MouseEvent):void {			TweenLite.to(_tooltipText, .25, {height:0});		}			}}
package com.muxxu.kube.views.options {	import com.muxxu.kube.crypto.RequestEncrypter;	import com.muxxu.kube.data.SharedObjectManager;	import com.muxxu.kube.utils.HTTPPath;	import com.muxxu.kube.views.AbstractKTView;	import com.nurun.structure.mvc.model.events.IModelEvent;	import flash.desktop.NativeApplication;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLVariables;	/**	 * 	 * @author  Francois	 */	public class Options extends AbstractKTView {		private var loader:URLLoader;										/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>Options</code>.		 */		public function Options() {			super();		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/* ****** *		 * PUBLIC *		 * ****** */		/**		 * Called on model's update.		 */		override public function update(e:IModelEvent):void { }						/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Initialize the class.		 */		override protected function initialize():void {			//super.initialize();						var descriptor:XML = NativeApplication.nativeApplication.applicationDescriptor;			var ns:Namespace = descriptor.namespaceDeclarations()[0];			var version:String = descriptor.ns::version;						loader = new URLLoader();			var request:URLRequest = new URLRequest(HTTPPath.getPath("updater"));			var vars:URLVariables = new URLVariables();			vars.uid = SharedObjectManager.getInstance().userIdCrp;			vars.version = version;			request.data = RequestEncrypter.encrypt(vars);			request.method = URLRequestMethod.POST;			loader.load(request);			//TODO clean			loader.addEventListener(IOErrorEvent.IO_ERROR, computePositions);			//			var appUpdater:ApplicationUpdaterUI = new ApplicationUpdaterUI();//			appUpdater.configurationFile = new File("app:/xml/updateConfig.xml"); //			appUpdater.initialize();					}				/**		 * Resize and replace the elements.		 */		 		override protected function computePositions(e:Event = null):void {			//super.computePositions();		}			}}
package com.muxxu.kube.views.gps.components {	import com.muxxu.kube.components.button.KubeButton;	import com.muxxu.kube.data.SharedObjectManager;	import com.nurun.components.text.CssTextField;	import com.nurun.components.vo.Margin;	import com.nurun.structure.environnement.label.Label;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextFieldAutoSize;	/**	 * Displays the GPS disclaimer.	 * 	 * @author  Francois	 */	public class GPSDisclaimer extends Sprite {				private var _textfield:CssTextField;
		private var _height:Number;
		private var _width:Number;
		private var _continueBt:KubeButton;
								/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>GPSDisclaimer</code>.		 */		public function GPSDisclaimer() {			initialize();		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/**		 * Sets the component's width without simply scaling it.		 */		override public function set width(value:Number):void {			_width = value;			computePositions();		}				/**		 * Sets the component's height without simply scaling it.		 */		override public function set height(value:Number):void {			_height = value;			computePositions();		}				/**		 * Gets the virtual component's width.		 */		override public function get width():Number { return _width; }				/**		 * Gets the virtual component's height.		 */		override public function get height():Number { return _height; }		/* ****** *		 * PUBLIC *		 * ****** */						/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Initializes the class.		 */		private function initialize():void {			_textfield = addChild(new CssTextField("content")) as CssTextField;			_continueBt = addChild(new KubeButton(Label.getLabel("gpsDisclaimerContinue"))) as KubeButton;			_textfield.text = Label.getLabel("gpsDisclaimer");			_textfield.autoSize = TextFieldAutoSize.LEFT;			_textfield.wordWrap = true;			_width = _height = 200;						_continueBt.style = "buttonBig";			_continueBt.contentMargin = new Margin(10, 5, 10, 5);						_continueBt.addEventListener(MouseEvent.CLICK, clickContinueHandler);		}				/**		 * Called when the continue button is clicked		 */		private function clickContinueHandler(event:MouseEvent):void {			SharedObjectManager.getInstance().gpsDisclaimerAgreed = true;			dispatchEvent(new Event(Event.COMPLETE));
		}
		/**		 * Resizes and replaces the elements.		 */		private function computePositions():void {			_textfield.width = Math.min(_width, 600);						_textfield.x = Math.round((_width - _textfield.width) * .5);			_textfield.y = Math.round((_height - (_textfield.height + 30)) * .5);						_continueBt.x = Math.round((_width - _continueBt.width) * .5);			_continueBt.y = Math.round(_textfield.y + _textfield.height + 15);		}	}}
package com.muxxu.kube.commands {	import com.muxxu.kube.data.TexturesData;	import com.nurun.core.commands.SequentialCommand;	import com.nurun.core.commands.events.CommandEvent;	import com.nurun.structure.environnement.configuration.Config;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.net.URLRequest;	/**	 * Loads the textures XML	 * 	 * @author  Francois	 */	public class LoadTexturesCmd extends LoadCssCmd {		private var _textures:SequentialCommand;
								/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>LoadTexturesData</code>.		 */		public function LoadTexturesCmd() {			super();		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/* ****** *		 * PUBLIC *		 * ****** */		override public function execute():void {			_loader.load(new URLRequest(Config.getPath("textures")));		}				/**		 * Makes the component garbage collectable.		 */		override public function dispose():void {			super.dispose();			_textures.dispose();		}								/* ******* *		 * PRIVATE *		 * ******* */		/**		 * Called when loading completes.		 */		override protected function loadCompleteHandler(e:Event):void {			var xml:XML;			try {				xml = new XML(_loader.data);			}catch(error:Error){				dispatchEvent(new CommandEvent(CommandEvent.ERROR, "Textures XML bad formated."));				return;			}			_textures = TexturesData.getInstance().populate(xml);			_textures.addEventListener(CommandEvent.COMPLETE, dispatchEvent);			_textures.addEventListener(CommandEvent.ERROR, dispatchEvent);			_textures.execute();		}		/**		 * Called if loading fails.		 */		override protected function loadErrorHandler(e:IOErrorEvent):void {			dispatchEvent(new CommandEvent(CommandEvent.ERROR, "Labels file not found."));		}			}}
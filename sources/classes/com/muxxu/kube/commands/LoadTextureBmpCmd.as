package com.muxxu.kube.commands {	import com.muxxu.kube.utils.LoadManager;	import com.nurun.core.commands.AbstractCommand;	import com.nurun.core.commands.events.CommandEvent;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Loader;	import flash.events.ErrorEvent;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.net.URLRequest;	import flash.system.LoaderContext;	/**	 * Loads a bitmap file.	 * 	 * @author  Francois	 */	public class LoadTextureBmpCmd extends AbstractCommand {		private var _url:String;		private var _loader:Loader;		private var _storageMethod:Function;								/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>LoadsTextureBmpCmd</code>.		 */		public function LoadTextureBmpCmd(url:String, storageMethod:Function) {			_storageMethod = storageMethod;			_url = url;			_loader = new Loader();			_loader.contentLoaderInfo.addEventListener(Event.COMPLETE,					loadCompleteHandler);			_loader.contentLoaderInfo.addEventListener(ErrorEvent.ERROR,				loadErrorHandler);			_loader.contentLoaderInfo.addEventListener(IOErrorEvent.DISK_ERROR,			loadErrorHandler);			_loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,			loadErrorHandler);			_loader.contentLoaderInfo.addEventListener(IOErrorEvent.NETWORK_ERROR,		loadErrorHandler);			_loader.contentLoaderInfo.addEventListener(IOErrorEvent.VERIFY_ERROR,		loadErrorHandler);			LoadManager.getInstance().addTarget(_loader);		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/* ****** *		 * PUBLIC *		 * ****** */		override public function execute():void {			_loader.load(new URLRequest(_url), new LoaderContext(true));		}								/* ******* *		 * PRIVATE *		 * ******* */				/**		 * Called when loading completes.		 */		protected function loadCompleteHandler(e:Event):void {			var target:Bitmap = _loader.content as Bitmap;			var bmd:BitmapData = new BitmapData(target.width, target.height, true, 0);			bmd.draw(target);			bmd.lock();			_storageMethod(bmd);			dispatchEvent(new CommandEvent(CommandEvent.COMPLETE));		}		/**		 * Called if loading fails.		 */		protected function loadErrorHandler(e:IOErrorEvent):void {			dispatchEvent(new CommandEvent(CommandEvent.ERROR, "Bitmap file \"" + _url + "\" not found."));		}			}}
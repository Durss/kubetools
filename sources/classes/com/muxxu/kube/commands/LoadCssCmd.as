package com.muxxu.kube.commands {	import com.muxxu.kube.utils.LoadManager;	import com.nurun.core.commands.AbstractCommand;	import com.nurun.core.commands.events.CommandEvent;	import com.nurun.core.lang.Disposable;	import com.nurun.structure.environnement.configuration.Config;	import com.nurun.utils.text.CssManager;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	/**	 * Loads the application's css styles and put them to the CssManager.	 * 	 * @author  Francois	 */	public class LoadCssCmd extends AbstractCommand implements Disposable {		protected var _loader:URLLoader;								/* *********** *		 * CONSTRUCTOR *		 * *********** */		/**		 * Creates an instance of <code>LoadCssCmd</code>.		 */		public function LoadCssCmd() {			_loader = new URLLoader();			_loader.addEventListener(Event.COMPLETE,		loadCompleteHandler);			_loader.addEventListener(IOErrorEvent.IO_ERROR,	loadErrorHandler);			LoadManager.getInstance().addTarget(_loader);		}						/* ***************** *		 * GETTERS / SETTERS *		 * ***************** */		/* ****** *		 * PUBLIC *		 * ****** */		/**		 * @inheritDoc		 */		override public function execute():void {			_loader.load(new URLRequest(Config.getPath("css")));		}				/**		 * Makes the component garbage collectable.		 */		public function dispose():void {			_loader.removeEventListener(Event.COMPLETE,			loadCompleteHandler);			_loader.removeEventListener(IOErrorEvent.IO_ERROR,	loadErrorHandler);			_loader = null;		}								/* ******* *		 * PRIVATE *		 * ******* */				/**		 * Called when loading completes.		 */		protected function loadCompleteHandler(e:Event):void {			CssManager.getInstance().setCss(_loader.data);			dispatchEvent(new CommandEvent(CommandEvent.COMPLETE));		}		/**		 * Called if loading fails.		 */		protected function loadErrorHandler(e:IOErrorEvent):void {			dispatchEvent(new CommandEvent(CommandEvent.ERROR, "Css file not found."));		}			}}